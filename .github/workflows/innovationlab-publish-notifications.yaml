name: Innovationlab Publish

on: 
  repository_dispatch:
    types:
      - resource-published

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Status: ${{ github.event.client_payload.status }}"
        echo "Path: ${{ github.event.client_payload.path }}"
        echo "Payload: ${{ toJSON(github) }}"
  innovationlab-publish:
    if: github.event.client_payload.status == 200 || github.event.client_payload.status == 204
    runs-on: ubuntu-latest
    steps:
    - name: Remove .md extension
      id: removeMd
      uses: frabert/replace-string-action@v2
      with:
        pattern: '\.md$'
        string: ${{ github.event.client_payload.path }}
        replace-with: ''
    - name: Fetch Admin API
      run: curl -o index.json https://admin.hlx.page/index/netcentric/innovationlab-blog/main/${{ endsWith(github.event.client_payload.path, '.json') && github.event.client_payload.path || steps.removeMd.outputs.replaced }}
    - name: Extract values from JSON
      run: |
        echo "title=$(jq -r '.results[0].record.description' index.json)" >> $GITHUB_ENV
        echo "tags=$(jq -r '.results[0].record.tags[]' index.json)" >> $GITHUB_ENV
        echo "image=$(jq -r '.results[0].record.image' index.json)" >> $GITHUB_ENV
    - name: Get current timestamp
      id: timestamp
      run: echo "current_timestamp=$(date -Is)" >> $GITHUB_ENV
    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
    - name: Send JSON to Lambda
      env:
        url: https://newhorizons-blog.innovationlab.cx${{ endsWith(github.event.client_payload.path, '.json') && github.event.client_payload.path || steps.removeMd.outputs.replaced }}
      run: |
        aws lambda invoke \
          --function-name mvplab_prod_post_experience_event \
          --cli-binary-format raw-in-base64-out \
          --payload '{"headers":{"aep-sandbox-name":"${{ secrets.AEP_SANDBOX_NAME }}"},"body":{"identityNamespaceId": "keycloakId","identityId": "${{ secrets.IDENTITY_ID }}","schemaId":"${{ secrets.SCHEMA_ID }}","datasetId":"${{ secrets.DATASET_ID }}","eventType":"BlogPost","payload":{"_netcentricgmbh":{"aemEvent":{"action": "xdmPublished","timestamp": "${{ env.current_timestamp }}", "title": "${{ env.title }}", "tags": "${{ env.tags }}", "image": "${{ env.image }}", "sourceSystem": "franklin", "path": ${{ toJson(env.url) }}}}}}}' \
          /dev/null
